[[{"l":"Информация","p":["Logic Arrows - это минималистичная браузерная игра-песочница, где ты можешь создавать сложные цифровые схемы, используя лишь разноцветные стрелочки. Простая механика, безграничные возможности: Игра основана на принципе клеточного автомата. Каждая стрелочка меняет своё состояние в зависимости от предыдущего состояния и сигналов, получаемых от соседних стрелок. Комбинируя стрелки разных цветов и логические элементы - вентили, задержки, блокировки и разветвители - ты сможешь построить всё, что угодно: от простых счётчиков до сложных вычислительных машин.","Logic-Arrows.io"]}],[{"l":"Обновления"},{"l":"v1.2.1","p":["Дата выхода: 19.11.2023 Bundle.js","Исправлен баг, из-за которого подсказки были по умолчанию выключены."]},{"l":"v1.2.0","p":["Дата выхода: 18.11.2023 Bundle.js","Новая вкладка - настройки.","Добавлены подсказки по управлению в левом нижнем углу ( могут быть отключены в настройках ).","Теперь максимальное отдаление камеры можно изменить в настройках.","Во время паузы можно выполнить один тик симуляции на Enter.","Добавлен французский язык.","Теперь game это глобальный объект, он хранит основные компоненты и функции игры ( для модов ).","Немного уменьшен размер меню с описанием уровня.","При замене стрелочки на другой тип, сигнал в клетке стирается.","При выделении пустых клеточек они не копируются.","Исправлен баг когда в уровнях при нажатии N можно было стирать сигналы.","Стрелочки ставились при нажатии на тулбар.","Ошибки перевода."]},{"l":"v1.1.2","p":["Дата выхода: 10.11.2023 Bundle.js","Добавлено отображение версии на странице авторизации.","Ошибки перевода."]},{"l":"v1.1.1","p":["Дата выхода: 4.11.2023 Bundle.js","Ctrl+C на некоторых системах работало как C.","Ctrl+V на некоторых системах работало как V.","Ctrl+C не сбрасывало выделение как C.","Ctrl+Z и отменяло последнеее действие даже если оно уже было отменено.","Ctrl+Y и отменяло отмену даже если она уже была отменена."]},{"l":"v1.1.0","p":["Shift+X и X вырезает выделенные стрелочки.","Shift+Y и Y отменяет последнюю отмену действия.","Shift+Z и Z отменяет последнее действие.","Z и X больше не переключают тулбар.","Дата выхода: 4.11.2023 Bundle.js","Добавлено автосохранение.","Кнопка и направленная кнопка теперь нажимаются левой кнопкой мыши.","Кнопки теперь не нажимаются при зажатом Shift.","На кнопках теперь курсор меняется на указатель.","Направленная кнопка, работает как обычная стрелка, но может быть активирована по клику.","Небольшая оптимизация сохранения карты.","Новая вкладка - гайд, содержит описания всех стрелочек.","Ошибки перевода.","Поворот стрелочки теперь сохраняется при переключении.","При копировании выделенных стрелочек, выделение снимается.","Стрелочка рандома отображается корректно.","Стрелочки на клавиатуре позволяют передвигаться по карте.","Тулбар теперь сохраняет свой размер при меньшем количестве стрелочек."]}],[{"l":"Постоянная ячейка","p":["Самый первый тип ячеек который использовался для создания ОЗУ в стрелочках. Байт в данном типе ячеек хранится с помощью Т-триггера/триггера. При чтении байт достаётся из них, а при записи перезаписывается.","Примеры озу на данном типе ячеек:"]},{"l":"64 Байта | От Чубрика","p":["Скачать в виде txt Ячейка ( без проводов ) Полная память"]}],[{"l":"Кольцевая ячейка","p":["Второй тип ячеек, на данный момент самый компактный, позволяет хранить 1 байт в 8 стрелочках. Байт в данном типе ячеек хранится с помощью кольца на 8/9 бит ( зависит от реализации ). При чтении байт достаётся из них, а при записи перезаписывается. Есть 2 типа ячеек:","2 Кольца, 1 кольцо для тайминга, 2 кольцо для самого байта, оба кольца по 8 бит. Синхронизация происходит при чтении.","1 Кольцо для байта но вместе с байтом идёт сигнал о начале/конце байта, это кольцо на 9 бит. Синхронизация происходит при чтении и записи.","Примеры озу на данном типе ячеек:"]},{"l":"Сравнение постоянной ячейки с кольцевой ячейкой ( без проводов )"},{"l":"256 Байт | 1 Кольцо по 8 Бит + Бит начала байта | От yndash","p":["Скачать в виде txt Ячейка Полная память"]}],[{"l":"Расширенная кольцевая ячейка","p":["Улучшенная кольцевая ячейка, может хранить более 1 байта в себе. Второй тип ячеек, на данный момент самый компактный, позволяет хранить 1 байт в 8 стрелочках. Байт в данном типе ячеек хранится с помощью кольца на 8/9 бит ( зависит от реализации ). При чтении байт достаётся из них, а при записи перезаписывается. Есть 2 реализации ячеек:","N Колец хранят по 8-9 бит на каждое. Синхронизация происходит при чтении и записи.","N Колец хранит X байт. Синхронизация происходит при чтении и записи.","Примеры озу на данном типе ячеек:"]},{"l":"1 Килобайт | 2 Кольца по 8 Бит + Бит начала байта | От Gulg","p":["Скачать в виде txt Ячейка Полная память"]},{"l":"256 Байт | 16 Колец по 16 Байт | От Gulg","p":["Скачать в виде txt Ячейка Полная память"]}]]